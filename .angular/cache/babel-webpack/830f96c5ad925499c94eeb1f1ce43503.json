{"ast":null,"code":"import { __decorate, __metadata } from 'tslib';\nimport { NgModule } from '@angular/core';\nimport { NavigationStart, NavigationError, NavigationEnd, NavigationCancel, Router, RouterModule } from '@angular/router';\nimport { LoadingBarService, LoadingBarModule } from '@ngx-loading-bar/core';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/router';\nimport * as ɵngcc2 from '@ngx-loading-bar/core';\nlet LoadingBarRouterModule = /*#__PURE__*/(() => {\n  let LoadingBarRouterModule = class LoadingBarRouterModule {\n    constructor(router, loader) {\n      const ref = loader.useRef('router');\n      router.events.subscribe(event => {\n        const navState = this.getCurrentNavigationState(router);\n\n        if (navState && navState.ignoreLoadingBar) {\n          return;\n        }\n\n        if (event instanceof NavigationStart) {\n          ref.start();\n        }\n\n        if (event instanceof NavigationError || event instanceof NavigationEnd || event instanceof NavigationCancel) {\n          ref.complete();\n        }\n      });\n    }\n\n    getCurrentNavigationState(router) {\n      // `getCurrentNavigation` only available in angular `7.2`\n      const currentNavigation = router.getCurrentNavigation && router.getCurrentNavigation();\n\n      if (currentNavigation && currentNavigation.extras) {\n        return currentNavigation.extras.state;\n      }\n\n      return {};\n    }\n\n  };\n\n  LoadingBarRouterModule.ɵfac = function LoadingBarRouterModule_Factory(t) {\n    return new (t || LoadingBarRouterModule)(ɵngcc0.ɵɵinject(ɵngcc1.Router), ɵngcc0.ɵɵinject(ɵngcc2.LoadingBarService));\n  };\n\n  LoadingBarRouterModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: LoadingBarRouterModule\n  });\n  LoadingBarRouterModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[RouterModule, LoadingBarModule], RouterModule, LoadingBarModule]\n  });\n  LoadingBarRouterModule = __decorate([__metadata(\"design:paramtypes\", [Router, LoadingBarService])], LoadingBarRouterModule);\n  return LoadingBarRouterModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(LoadingBarRouterModule, {\n    imports: function () {\n      return [RouterModule, LoadingBarModule];\n    },\n    exports: function () {\n      return [RouterModule, LoadingBarModule];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { LoadingBarRouterModule }; //# sourceMappingURL=ngx-loading-bar-router.js.map","map":null,"metadata":{},"sourceType":"module"}